1. 데이터 타입
- 일반자료형: 실제 데이터 저장(byte, short, int, long, double, float, boolean, char)
	ex) int a = 50;
- 참조형: 주소저장(직접 데이터를 대입 할 수 없음) new 연산자에 의해 기억장소가 할당됨 (배열, 클래스, 열거형[enum], 인터페이스)

- 변수명에서 _ $ 는 거의 안쓰임. _는 시스템변수에서 써서 일반변수명에서는 되도록 쓰지 않는게 좋음

- 생성자 메서드는 대문자로 시작
- 클래스 이름은 대문자로 시작
- 상수명은 대문자로만 구성(두단어 이상일때 _로 구분) ex) final DATA_TYPE;

- 클래스타입: String

2. 변수
- 멤버변수는 자동초기화가 됨
- 지역변수는 사용자가 초기화 시키지 않으면 초기화가 안됨

3. JVM
			JVM
	Method
	-------------------
	Call Stack
	-------------------
	Heap

- new 연산자로 할당된 객체는 heap에 저장됨 
- new 연산자를 쓰지 않고  객체에 변수를 지정하면 Call Stack에 저장되어서 null이 됨 
	ex) Person p1 = null;
- String 은 메서드 영역에 저장됨 (String a = "gg";)
	String a = new String("gg"); 는 heap영역
	같은 new 연산자라고 하여도 call stack에서 불러올때 다른 영역으로 불러옴 	
4. 기타 
8bit == 1byte
리터럴 == 프로그래머에 의해 직접 입력된 값

